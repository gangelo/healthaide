<%
# Button component based on Catalyst's design
# Usage:
#   render "components/buttons/button",
#         text: "Submit",
#         type: :submit,
#         variant: :primary,
#         size: :md,
#         icon: "path/to/icon.svg",
#         class: "additional-classes",
#         href: path_helper # or path: path_helper
%>

<%
  # Define style mappings with variables
  variant_styles = {
    primary:   "bg-blue-600 text-white shadow-sm hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600",
    secondary: "bg-white text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50",
    danger:    "bg-red-600 text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-600",
    success:   "bg-green-600 text-white shadow-sm hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-green-600",
    warning:   "bg-yellow-600 text-white shadow-sm hover:bg-yellow-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-yellow-600",
    info:      "bg-blue-100 text-blue-700 shadow-sm hover:bg-blue-200 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600"
  }

  size_styles = {
    sm: "px-2.5 py-1.5 text-xs font-semibold rounded-md",
    md: "px-3 py-2 text-sm font-semibold rounded-md",
    lg: "px-4 py-3 text-base font-semibold rounded-lg"
  }

  icon_sizes = {
    sm: "h-4 w-4",
    md: "h-4 w-4",
    lg: "h-5 w-5"
  }

  # Get the proper classes using the mappings with fallbacks
  variant = local_assigns[:variant] || :primary
  size = local_assigns[:size] || :md

  variant_classes = variant_styles[variant] || variant_styles[:primary]
  size_classes = size_styles[size] || size_styles[:md]
  icon_classes = icon_sizes[size] || icon_sizes[:md]

  # Combine all classes
  button_classes = "inline-flex items-center gap-x-1.5 #{variant_classes} #{size_classes} #{local_assigns[:class]}"

  # Determine if this should be a link (supports both href and path)
  url = local_assigns[:href] || local_assigns[:path]
  is_link = url.present? || local_assigns[:type] == :link

  # Props to pass to button or link (exclude component-specific props)
  button_props = local_assigns.except(:text, :variant, :size, :icon, :class, :href, :path, :type)
%>

<% if is_link %>
  <%= link_to url, class: button_classes, **button_props do %>
    <%= image_tag local_assigns[:icon], class: icon_classes, aria_hidden: true if local_assigns[:icon].present? %>
    <%= local_assigns[:text] %>
  <% end %>
<% else %>
  <%= button_tag type: local_assigns[:type] || :button, class: button_classes, **button_props do %>
    <%= image_tag local_assigns[:icon], class: icon_classes, aria_hidden: true if local_assigns[:icon].present? %>
    <%= local_assigns[:text] %>
  <% end %>
<% end %>
